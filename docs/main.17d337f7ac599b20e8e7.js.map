{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/ControlUI.js","webpack:///./src/components/control-ui.css","webpack:///./src/index.js","webpack:///./src/style.css","webpack:///./src/util/barycentric.js","webpack:///./src/util/createSketchAtrritbutes.js","webpack:///./src/util/findMedianFaceSize.js","webpack:///./src/util/refPoint.js"],"names":["UI_DEFAULTS","phong","animateNoise","ControlUI","state","options","changeOption","key","value","setState","props","changeOptions","React","Component","OrbitControls","require","fragmentShader","vertexShader","controls","LIGHT_X","LIGHT_Y","LIGHT_Z","TAU","Math","PI","lightDirection","Vector3","normalize","DEFAULT_MATERIAL_OPTS","color","scale","shadow","flipEveryOther","uiOptions","camera","scene","light","createMaterial","opts","MeshPhongMaterial","uniforms","UniformsUtils","merge","ShaderLib","Color","type","primary","height","time","material","ShaderMaterial","lights","withBarycentricCoordinates","buffer","getIndex","toNonIndexed","createBox","width","depth","resolution","BufferGeometry","fromGeometry","CubeGeometry","cubeMat","cube2Mat","groundMat","icoMat","sizeMin","Infinity","sizeMax","createScene","PerspectiveCamera","enableDamping","dampingFactor","Scene","DirectionalLight","position","set","castShadow","bias","mapSize","left","right","top","bottom","near","far","add","ground","groundMesh","Mesh","y","receiveShadow","loader","GLTFLoader","load","gltf","gltFScene","traverse","child","isMesh","quaternion","Quaternion","updateMatrixWorld","matrixWorld","decompose","newGeom","geometry","median","min","max","console","log","mesh","sqrt","copy","matrixAutoUpdate","e","error","lookAt","renderer","WebGLRenderer","antialias","shadowMap","enabled","BasicShadowMap","setPixelRatio","window","devicePixelRatio","setClearColor","MIN_AZIMUT","angle","dx","last","first","STEP","pause","lastCameraPos","onAnimationFrame","timeStamp","cos","sin","delta","setUniform","update","equals","clone","render","mat","name","onResize","innerWidth","innerHeight","setSize","aspect","updateProjectionMatrix","addEventListener","document","body","appendChild","domElement","getElementById","info","vPrimary","DOWN","vSecondary","LEFT","positions","attributes","array","normals","normal","primaryPlane","Plane","setFromNormalAndCoplanarPoint","multiplyScalar","secondaryPlane","barycentric","BufferAttribute","Float32Array","length","out","flip","i","j","k","EDGE_INDEXES","idx0","idx1","idx2","vPoint0","x","z","vPoint1","edges","other","abs","distanceToPoint","start","end","vector","sub","primaryEdge","secondaryEdge","tertiaryEdge","aOrthogonalToB","dot","bOrthogonalToC","cOrthogonalToA","deltaA","deltaB","deltaC","sort","sortByDeltaAscending","a","b","vTmp","refPoint","baryArray","rpArray","prevFaceWasCoplanar","nextFaceIsCoplanar","vNormalA","vNormalB","center","centerA","getCenter","centerB","addAttribute","vCenter","index","Error","numFaces","areas","Array","x1","x2","x3","y1","y2","y3","t0","t1","t2","sortAscending","half","alternatingQuads"],"mappings":"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","file":"main.17d337f7ac599b20e8e7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from \"react\"\n\n// noinspection ES6UnusedImports\nimport CONTROL_CSS from \"./control-ui.css\"\n\nexport const UI_DEFAULTS = {\n    phong: false,\n    animateNoise: false\n};\n\nclass ControlUI extends React.Component {\n\n    state = {\n        options: UI_DEFAULTS\n    };\n\n    changeOption = (key, value )=> {\n\n        const options = {\n            ... this.state.options,\n            [key] : value\n        };\n\n        this.setState(\n            {\n                options\n            },\n            () => this.props.changeOptions(this.state.options)\n        )\n    };\n\n    render()\n    {\n        const { animateNoise } = this.state.options;\n\n        return (\n            <div id=\"control-ui\">\n                <a href=\"https://github.com/fforw/sketch\">github</a>\n                <br/>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={ animateNoise }\n                        onClick={ ev => this.changeOption(\"animateNoise\", !animateNoise) }\n                    />\n                    animate noise\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default ControlUI\n","// extracted by mini-css-extract-plugin","// noinspection ES6UnusedImports\nimport STYLES from \"./style.css\"\nimport raf from \"raf\"\nimport React from \"react\"\nimport { render } from \"react-dom\"\nimport {\n    CameraHelper,\n    Color,\n    CubeGeometry,\n    DirectionalLight,\n    IcosahedronGeometry,\n    Mesh,\n    BasicShadowMap,\n    PCFShadowMap,\n    PCFSoftShadowMap,\n    PerspectiveCamera,\n    Scene,\n    ShaderLib,\n    ShaderMaterial,\n    UniformsUtils,\n    Vector3,\n    WebGLRenderer,\n    BufferGeometry,\n    MeshPhongMaterial,\n    Quaternion\n} from \"three\";\n\nimport glslify from \"glslify\";\nimport barycentric from \"./util/barycentric\";\nimport ControlUI, { UI_DEFAULTS } from \"./components/ControlUI\";\nimport refPoint from \"./util/refPoint\";\nimport GLTFLoader from \"three-gltf-loader\"\nimport createSketchAtrritbutes from \"./util/createSketchAtrritbutes\";\nimport findMedianFaceSize from \"./util/findMedianFaceSize\";\n\nconst OrbitControls = require(\"three-orbit-controls\")(require(\"three\"));\n\n\nconst fragmentShader = glslify(\"./sketch.frag\");\nconst vertexShader = glslify(\"./sketch.vert\");\n\n\nlet controls;\n// ambient\n//scene.add(new AmbientLight(0x222222));\n\nconst LIGHT_X = 0;\nconst LIGHT_Y = 200;\nconst LIGHT_Z = 100;\n\nconst TAU = Math.PI * 2;\n\nconst lightDirection = new Vector3(LIGHT_X, LIGHT_Y, LIGHT_Z).normalize();\n\nconst DEFAULT_MATERIAL_OPTS = {\n    color: 0xffffff,\n    scale: 1,\n    shadow: 0.6,\n    flipEveryOther: true\n};\n\nlet uiOptions = { ... UI_DEFAULTS };\n\nlet camera;\nlet scene;\nlet light;\n\n/**\n *\n * @param {object} opts\n * @param {string|number} [opts.color]\n * @param {number} [opts.scale]\n *\n * @return {ShaderMaterial}\n */\nfunction createMaterial(opts)\n{\n    if (opts.phong)\n    {\n        return new MeshPhongMaterial();\n    }\n\n    opts = {\n        ... DEFAULT_MATERIAL_OPTS,\n        ... opts\n    };\n\n\n    opts.scale *= 0.2;\n\n\n    let uniforms = UniformsUtils.merge([\n        ShaderLib.shadow.uniforms,\n        {\n            /**\n             * Light face color, gets speckled with white\n             */\n            color: {\n                value: new Color( opts.color )\n            },\n            // direction of the directional light\n            lightDirection: {\n                type: \"v3\",\n                value: lightDirection\n            },\n\n            // minimal shadow value\n            shadow: {\n                type: 'f',\n                value: 0.9\n            },\n            primary: {\n                type: \"v3\",\n                value: new Vector3(0,-0.1,0)\n            },\n\n            height: {\n                value: height\n            },\n\n            scale: {\n                type: 'f',\n                value: opts.scale\n            },\n            time: {\n                type: 'f',\n                value: 0\n            },\n            flipEveryOther: {\n                type: 'bool',\n                value: opts.flipEveryOther\n            },\n            camera: {\n                type: 'v3',\n                value: new Vector3(0,0,0)\n            }\n        }\n    ]);\n\n    //console.log(\"UNIFORMS\", uniforms);\n\n    const material = new ShaderMaterial({\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n            uniforms: uniforms,\n            lights: true\n        }\n    );\n    return material;\n}\n\nfunction withBarycentricCoordinates(buffer, flipEveryOther = true)\n{\n    // let buffer = new BufferGeometry();\n    // buffer.fromGeometry(geometry);\n\n    if (buffer.getIndex() !== null)\n    {\n        buffer = buffer.toNonIndexed();\n    }\n\n    createSketchAtrritbutes(buffer);\n\n    return buffer;\n}\n\nfunction createBox(width, height, depth, resolution = 1)\n{\n    const buffer = new BufferGeometry();\n    buffer.fromGeometry(        new CubeGeometry(\n        width,\n        height,\n        depth,\n        resolution,\n        resolution,\n        resolution\n    ));\n\n\n    return withBarycentricCoordinates(\n        buffer,\n        true\n    );\n}\n\n\nconst cubeMat = createMaterial({\n    color: 0xf0cebb,\n    scale: 0.08\n});\nconst cube2Mat = createMaterial({\n    color: 0xbbddf0,\n    scale: 0.08\n\n});\nconst groundMat = createMaterial({\n    color: 0xbbbbbf,\n    scale: 0.01\n});\nconst icoMat = createMaterial({\n    color: 0x888888,\n    scale: 0.5,\n    flipEveryOther: false\n});\n\nlet sizeMin = Infinity, sizeMax = -Infinity;\n\nfunction createScene()\n{\n    camera = new PerspectiveCamera();\n\n    controls = new OrbitControls(camera);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.5;\n\n// scene\n    scene = new Scene();\n\n// light\n    light = new DirectionalLight(0xffffff, 1);\n    light.position.set(LIGHT_X, LIGHT_Y, LIGHT_Z);\n    light.castShadow = true; // default false\n\n    light.shadow.bias = 0.0001;\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.height = 2048;\n    light.shadow.camera.left = -30;\n    light.shadow.camera.right = 30;\n    light.shadow.camera.top = 30;\n    light.shadow.camera.bottom = -30;\n    light.shadow.camera.near = 0.5;\n    light.shadow.camera.far = 500;\n\n    scene.add(light);\n\n    // const icoGeometry = withBarycentricCoordinates(new IcosahedronGeometry(2, 2), false);\n    // const icoMesh = new Mesh( icoGeometry, icoMat );\n    // icoMesh.position.x = 2;\n    // icoMesh.position.z = -5;\n    // icoMesh.position.y = 1.5;\n    // icoMesh.castShadow = true;\n    // icoMesh.receiveShadow = true;\n    //\n    // scene.add(icoMesh);\n    //\n    // const cubeGeometry = createBox(3, 4, 3);\n    // const cubeMesh = new Mesh(cubeGeometry, cubeMat);\n    // cubeMesh.position.x = 1;\n    // cubeMesh.position.y = 2;\n    // cubeMesh.position.z = 1;\n    // cubeMesh.castShadow = true;\n    // cubeMesh.receiveShadow = true;\n    //\n    // scene.add(cubeMesh);\n    //\n    // const cube3Mesh = new Mesh(cubeGeometry, cubeMat);\n    // cube3Mesh.position.x = 1;\n    // cube3Mesh.position.y = 6;\n    // cube3Mesh.position.z = 1;\n    // cube3Mesh.rotation.y = TAU/8;\n    // cube3Mesh.castShadow = true;\n    // cube3Mesh.receiveShadow = true;\n    //\n    // scene.add(cube3Mesh);\n    //\n    // const cube2Geometry = createBox(5, 3, 3);\n    //\n    // const cube2Mesh = new Mesh(cube2Geometry, cube2Mat);\n    // cube2Mesh.position.x = -3.5;\n    // cube2Mesh.position.y = 1.5;\n    // cube2Mesh.position.z = -2;\n    // cube2Mesh.castShadow = true;\n    // cube2Mesh.receiveShadow = true;\n    //\n    // scene.add(cube2Mesh);\n    //\n    //\n    // const cube4Mesh = new Mesh(cube2Geometry, cube2Mat);\n    // cube4Mesh.position.x = -3.5;\n    // cube4Mesh.position.y = 1.5;\n    // cube4Mesh.position.z = 5;\n    // cube4Mesh.rotation.y = TAU/32;\n    // cube4Mesh.castShadow = true;\n    // cube4Mesh.receiveShadow = true;\n    //\n    // scene.add(cube4Mesh);\n    //\n        const ground = createBox(40, 1, 40, 8);\n        const groundMesh = new Mesh(ground, groundMat);\n        groundMesh.position.y = -0.5;\n        groundMesh.castShadow = true;\n        groundMesh.receiveShadow = true;\n\n        scene.add(groundMesh);\n\n\n    var loader = new GLTFLoader();\n    loader.load( \"park-gltf.glb\", function ( gltf ) {\n\n\n        const { scene: gltFScene } = gltf;\n\n        gltFScene.traverse( function ( child ) {\n\n            try\n            {\n                if ( child.isMesh ) {\n\n\n                    const position = new Vector3(0,0,0);\n                    const quaternion = new Quaternion();\n                    const scale = new Vector3(0,0,0);\n\n\n                    child.updateMatrixWorld(true);\n                    child.matrixWorld.decompose(position, quaternion, scale);\n\n\n\n                    const newGeom = withBarycentricCoordinates(child.geometry, false);\n\n                    const median = findMedianFaceSize(newGeom);\n\n                    sizeMin = Math.min(median, sizeMin);\n                    sizeMax = Math.max(median, sizeMax);\n\n                    console.log(\"face size\", median, \"min = \", sizeMin, \"max=\", sizeMax);\n\n                    const mesh = new Mesh(\n                        newGeom,\n                        createMaterial({\n                            color: 0xbbbbbf,\n                            scale: median > 1 ? median * 0.004 : Math.sqrt(median) * 0.7\n                        })\n\n                    );\n                    mesh.position.copy(position);\n                    mesh.quaternion.copy(quaternion);\n                    mesh.scale.copy(scale);\n\n                    mesh.castShadow = true;\n                    mesh.receiveShadow = true;\n                    mesh.matrixAutoUpdate = true;\n\n                    scene.add( mesh);\n                }\n            }\n            catch(e)\n            {\n                console.error(\"Error traversing\", e);\n            }\n        } );\n\n\n        //scene.add( gltFScene);\n\n    } );\n\n// camera\n    camera.position.set(-3, 4, -10);\n    camera.lookAt(new Vector3(0, 0, 0));\n\n    // const shadowHelper = new CameraHelper(light.shadow.camera);\n    // scene.add(shadowHelper);\n\n\n}\n\ncreateScene();\n\nconst renderer = new WebGLRenderer({\n        antialias: false\n    });\n\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = BasicShadowMap; // default THREE.PCFShadowMap\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setClearColor(new Color(0xf0f0f0));\n\n\n\nconst MIN_AZIMUT = TAU / 360;\n\nlet angle = TAU/4;\nlet dx = 1;\n\nlet last = 0;\nlet first = 0;\n\nconst STEP = 1/100 * 1000;\n\nlet pause = false;\n\nlet lastCameraPos = null;\n\n// render loop\nfunction onAnimationFrame(timeStamp)\n{\n\n    try\n    {\n        if (!pause)\n        {\n            light.position.set(\n                Math.cos(angle) * 150,\n                Math.sin(angle) * 150,\n                200\n            );\n\n            // cube2Mesh.position.set(\n            //     -3.5,\n            //     3.5 + Math.cos(angle) * 2,\n            //     -2\n            // );\n            if (!first)\n            {\n                first = timeStamp;\n                last = timeStamp;\n            }\n\n            let delta = timeStamp - last;\n\n            if (delta > STEP)\n            {\n                while (delta > STEP)\n                {\n                    angle += dx * delta * 0.0001;\n\n                    if (angle < MIN_AZIMUT)\n                    {\n                        angle = MIN_AZIMUT;\n                        dx = 1;\n\n\n                    }\n                    else if (angle > Math.PI - MIN_AZIMUT)\n                    {\n                        angle = Math.PI - MIN_AZIMUT;\n                        dx = -1;\n                    }\n\n\n                    const time = timeStamp - first;\n\n                    if (uiOptions.animateNoise)\n                    {\n                        setUniform(icoMat, \"time\", time);\n                        setUniform(cubeMat, \"time\", time);\n                        setUniform(cube2Mat, \"time\", time);\n                        setUniform(groundMat, \"time\", time);\n                    }\n\n                    delta -= STEP;\n                    last += STEP;\n\n                    scene.update && scene.update(last);\n                }\n\n                controls.update();\n\n                if (!lastCameraPos || !lastCameraPos.equals(camera.position))\n                {\n                    lastCameraPos = camera.position.clone();\n                    //console.log(\"Camera at \", lastCameraPos, controls);\n\n                    setUniform(icoMat, \"camera\", lastCameraPos);\n                    setUniform(cubeMat, \"camera\", lastCameraPos);\n                    setUniform(cube2Mat, \"camera\", lastCameraPos);\n                    setUniform(groundMat, \"camera\", lastCameraPos);\n                }\n            }\n            renderer.render(scene, camera);\n        }\n        raf(onAnimationFrame);\n\n    }\n    catch(e)\n    {\n        console.error(\"Error in animation loop\", e);\n    }\n}\n\n\nlet width, height;\n\nfunction setUniform(mat, name, value)\n{\n    let uniforms = mat.uniforms;\n    if (uniforms)\n    {\n        uniforms[name].value = value\n    }\n}\n\n// resize\nfunction onResize()\n{\n    width = window.innerWidth;\n    height = window.innerHeight;\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    setUniform(icoMat, \"height\", height);\n    setUniform(cubeMat, \"height\", height);\n    setUniform(cube2Mat, \"height\", height);\n    setUniform(groundMat, \"height\", height);\n}\n\nonResize();\nwindow.addEventListener(\"resize\", onResize);\n\n// dom\ndocument.body.appendChild(renderer.domElement);\n\n\nrender(\n    <ControlUI\n        changeOptions={ opts => uiOptions = opts }\n    />,\n    document.getElementById(\"root\"),\n    () => {\n        console.info(\"ready\");\n        raf(onAnimationFrame);\n    }\n);\n\n","// extracted by mini-css-extract-plugin","import {\n    BufferAttribute,\n    Plane,\n    Vector3\n} from \"three\";\n\n\nconst TAU = Math.PI * 2;\n\nfunction sortByDeltaAscending(a,b)\n{\n    return a.delta - b.delta;\n}\n\nexport const DOWN = new Vector3(0,-1,0);\nexport const LEFT = new Vector3(-1,0,0);\n\nconst EDGE_INDEXES = [\n    [0,3,6],\n    [3,6,0],\n    [6,0,3],\n];\n\nconst vPoint0 = new Vector3(0,0,0);\nconst vPoint1 = new Vector3(0,0,0);\nconst vTmp = new Vector3(0,0,0);\n\nconst edges = [null,null,null];\n\nexport default function (geometry, flipEveryOther = true, vPrimary = DOWN, vSecondary = LEFT)\n{\n    const positions = geometry.attributes.position.array;\n    const normals = geometry.attributes.normal.array;\n\n    // the primary plane lies in the direction of the primary vector, safely outside of the scene\n    const primaryPlane = new Plane();\n    primaryPlane.setFromNormalAndCoplanarPoint(vPrimary, vPrimary.clone().multiplyScalar(1000));\n\n    // the primary plane lies in the direction of the primary vector, safely outside of the scene\n    const secondaryPlane = new Plane();\n    secondaryPlane.setFromNormalAndCoplanarPoint(vSecondary, vSecondary.clone().multiplyScalar(1000));\n\n    // Build new attribute storing barycentric coordinates\n    // for each vertex\n    const barycentric = new BufferAttribute(new Float32Array(positions.length * 4 / 3), 4);\n\n    const out = barycentric.array;\n\n    let flip = false;\n    for (let i = 0, j = 0; i < positions.length; i += 9, j += 12)\n    {\n\n\n        // if (i === 99)\n        // {\n            for (let k=0; k < 3; k++)\n            {\n                const [idx0, idx1, idx2] = EDGE_INDEXES[k];\n\n                vPoint0.x = positions[ i + idx0    ];\n                vPoint0.y = positions[ i + idx0 + 1];\n                vPoint0.z = positions[ i + idx0 + 2];\n\n                vPoint1.x = positions[ i + idx1    ];\n                vPoint1.y = positions[ i + idx1 + 1];\n                vPoint1.z = positions[ i + idx1 + 2];\n\n                edges[k] = {\n                    other: idx2,\n                    delta: Math.abs(primaryPlane.distanceToPoint(vPoint0) - primaryPlane.distanceToPoint(vPoint1)),\n                    start: vPoint0.clone(),\n                    end: vPoint1.clone(),\n                    vector: vPoint1.clone().sub(vPoint0)\n                };\n            }\n\n            let primaryEdge, secondaryEdge, tertiaryEdge;\n            if ( edges[0].delta === edges[1].delta &&\n                edges[0].delta === edges[2].delta)\n            {\n                const aOrthogonalToB = edges[0].vector.dot(edges[1].vector) === 0;\n                const bOrthogonalToC = edges[1].vector.dot(edges[2].vector) === 0;\n                const cOrthogonalToA = edges[2].vector.dot(edges[0].vector) === 0;\n\n                if (aOrthogonalToB)\n                {\n                    const deltaA = Math.abs(secondaryPlane.distanceToPoint(edges[0].start) - secondaryPlane.distanceToPoint(edges[0].end));\n                    const deltaB = Math.abs(secondaryPlane.distanceToPoint(edges[1].start) - secondaryPlane.distanceToPoint(edges[1].end));\n\n                    if ( deltaA < deltaB)\n                    {\n                        primaryEdge = 0;\n                        secondaryEdge = 3;\n                        tertiaryEdge = 6;\n                    }\n                    else\n                    {\n                        primaryEdge = 3;\n                        secondaryEdge = 0;\n                        tertiaryEdge = 6;\n                    }\n                }\n                else if (bOrthogonalToC)\n                {\n                    const deltaB = Math.abs(secondaryPlane.distanceToPoint(edges[1].start) - secondaryPlane.distanceToPoint(edges[1].end));\n                    const deltaC = Math.abs(secondaryPlane.distanceToPoint(edges[2].start) - secondaryPlane.distanceToPoint(edges[2].end));\n\n                    if ( deltaB < deltaC)\n                    {\n                        primaryEdge = 3;\n                        secondaryEdge = 6;\n                        tertiaryEdge = 0;\n                    }\n                    else\n                    {\n                        primaryEdge = 6;\n                        secondaryEdge = 3;\n                        tertiaryEdge = 0;\n                    }\n                }\n                else if (cOrthogonalToA)\n                {\n                    const deltaC = Math.abs(secondaryPlane.distanceToPoint(edges[2].start) - secondaryPlane.distanceToPoint(edges[2].end));\n                    const deltaA = Math.abs(secondaryPlane.distanceToPoint(edges[0].start) - secondaryPlane.distanceToPoint(edges[0].end));\n\n                    if ( deltaC < deltaA)\n                    {\n                        primaryEdge = 6;\n                        secondaryEdge = 0;\n                        tertiaryEdge = 3;\n                    }\n                    else\n                    {\n                        primaryEdge = 0;\n                        secondaryEdge = 6;\n                        tertiaryEdge = 3;\n                    }\n                }\n            }\n            else\n            {\n                edges.sort(sortByDeltaAscending);\n\n                primaryEdge = edges[0].other;\n\n                if (edges[0].vector.dot(edges[1].vector) === 0)\n                {\n                    secondaryEdge = edges[2].other;\n                    tertiaryEdge = edges[1].other;\n                }\n                else\n                {\n                    secondaryEdge = edges[1].other;\n                    tertiaryEdge = edges[2].other;\n                }\n\n            }\n\n        //     console.log(\"edges\", edges);\n        // }\n        // else\n        // {\n        //     continue;\n        // }\n\n\n        //console.log({primaryEdge, secondaryEdge, tertiaryEdge});\n\n        out[ j     ] = primaryEdge === 0 ? 1: 0;\n        out[ j +  1] = primaryEdge === 3 ? 1: 0;\n        out[ j +  2] = primaryEdge === 6 ? 1: 0;\n        out[ j +  3] = flip ? 1 : 0;\n\n        out[ j +  4] = secondaryEdge === 0 ? 1: 0;\n        out[ j +  5] = secondaryEdge === 3 ? 1: 0;\n        out[ j +  6] = secondaryEdge === 6 ? 1: 0;\n        out[ j +  7] = flip ? 1 : 0;\n\n        out[ j +  8] = tertiaryEdge === 0 ? 1: 0;\n        out[ j +  9] = tertiaryEdge === 3 ? 1: 0;\n        out[ j + 10] = tertiaryEdge === 6 ? 1: 0;\n        out[ j + 11] = flip ? 1 : 0;\n\n        if (flipEveryOther)\n        {\n            flip = !flip;\n        }\n    }\n    //console.log(\"BARYCENTRIC\", barycentric);\n\n    return barycentric;\n}\n","import {\n    BufferAttribute,\n    Plane,\n    Vector3\n} from \"three\";\n\n\nconst TAU = Math.PI * 2;\n\nconst vCenter = new Vector3(0, 0, 0);\n\nfunction getCenter(positions, index)\n{\n    vCenter.x = (\n        positions[index] +\n        positions[index + 3] +\n        positions[index + 6]\n    ) / 3;\n\n    vCenter.y = (\n        positions[index + 1] +\n        positions[index + 4] +\n        positions[index + 7]\n    ) / 3;\n\n    vCenter.z = (\n        positions[index + 2] +\n        positions[index + 5] +\n        positions[index + 8]\n    ) / 3;\n\n    return vCenter;\n}\n\nfunction sortByDeltaAscending(a, b)\n{\n    return a.delta - b.delta;\n}\n\nexport const DOWN = new Vector3(0, -1, 0);\nexport const LEFT = new Vector3(-1, 0, 0);\n\nconst EDGE_INDEXES = [\n    [0, 3, 6],\n    [3, 6, 0],\n    [6, 0, 3],\n];\n\nconst vPoint0 = new Vector3(0, 0, 0);\nconst vPoint1 = new Vector3(0, 0, 0);\nconst vNormalA = new Vector3(0, 0, 0);\nconst vNormalB = new Vector3(0, 0, 0);\n\nconst edges = [null, null, null];\n\nexport default function (geometry, vPrimary = DOWN, vSecondary = LEFT) {\n    const positions = geometry.attributes.position.array;\n    const normals = geometry.attributes.normal.array;\n\n    // the primary plane lies in the direction of the primary vector, safely outside of the scene\n    const primaryPlane = new Plane();\n    primaryPlane.setFromNormalAndCoplanarPoint(vPrimary, vPrimary.clone().multiplyScalar(1000));\n\n    // the primary plane lies in the direction of the primary vector, safely outside of the scene\n    const secondaryPlane = new Plane();\n    secondaryPlane.setFromNormalAndCoplanarPoint(vSecondary, vSecondary.clone().multiplyScalar(1000));\n\n    // Build new attribute storing barycentric coordinates\n    // for each vertex\n    const barycentric = new BufferAttribute(new Float32Array(positions.length * 4 / 3), 4);\n    const refPoint = new BufferAttribute(new Float32Array(positions.length), 3);\n\n    const baryArray = barycentric.array;\n    const rpArray = refPoint.array;\n\n    let length = positions.length;\n    let last = positions.length - 9;\n\n    let prevFaceWasCoplanar = false;\n\n    for (let i = 0, j = 0; i < length; i += 9, j += 12)\n    {\n        for (let k = 0; k < 3; k++)\n        {\n            const [idx0, idx1, idx2] = EDGE_INDEXES[k];\n\n            vPoint0.x = positions[i + idx0];\n            vPoint0.y = positions[i + idx0 + 1];\n            vPoint0.z = positions[i + idx0 + 2];\n\n            vPoint1.x = positions[i + idx1];\n            vPoint1.y = positions[i + idx1 + 1];\n            vPoint1.z = positions[i + idx1 + 2];\n\n            edges[k] = {\n                other: idx2,\n                delta: Math.abs(primaryPlane.distanceToPoint(vPoint0) - primaryPlane.distanceToPoint(vPoint1)),\n                start: vPoint0.clone(),\n                end: vPoint1.clone(),\n                vector: vPoint1.clone().sub(vPoint0)\n            };\n        }\n\n        let primaryEdge, secondaryEdge, tertiaryEdge;\n        if (edges[0].delta === edges[1].delta &&\n            edges[0].delta === edges[2].delta)\n        {\n            const aOrthogonalToB = edges[0].vector.dot(edges[1].vector) === 0;\n            const bOrthogonalToC = edges[1].vector.dot(edges[2].vector) === 0;\n            const cOrthogonalToA = edges[2].vector.dot(edges[0].vector) === 0;\n\n            if (aOrthogonalToB)\n            {\n                const deltaA = Math.abs(secondaryPlane.distanceToPoint(edges[0].start) - secondaryPlane.distanceToPoint(edges[0].end));\n                const deltaB = Math.abs(secondaryPlane.distanceToPoint(edges[1].start) - secondaryPlane.distanceToPoint(edges[1].end));\n\n                if (deltaA < deltaB)\n                {\n                    primaryEdge = 0;\n                    secondaryEdge = 3;\n                    tertiaryEdge = 6;\n                }\n                else\n                {\n                    primaryEdge = 3;\n                    secondaryEdge = 0;\n                    tertiaryEdge = 6;\n                }\n            }\n            else if (bOrthogonalToC)\n            {\n                const deltaB = Math.abs(secondaryPlane.distanceToPoint(edges[1].start) - secondaryPlane.distanceToPoint(edges[1].end));\n                const deltaC = Math.abs(secondaryPlane.distanceToPoint(edges[2].start) - secondaryPlane.distanceToPoint(edges[2].end));\n\n                if (deltaB < deltaC)\n                {\n                    primaryEdge = 3;\n                    secondaryEdge = 6;\n                    tertiaryEdge = 0;\n                }\n                else\n                {\n                    primaryEdge = 6;\n                    secondaryEdge = 3;\n                    tertiaryEdge = 0;\n                }\n            }\n            else if (cOrthogonalToA)\n            {\n                const deltaC = Math.abs(secondaryPlane.distanceToPoint(edges[2].start) - secondaryPlane.distanceToPoint(edges[2].end));\n                const deltaA = Math.abs(secondaryPlane.distanceToPoint(edges[0].start) - secondaryPlane.distanceToPoint(edges[0].end));\n\n                if (deltaC < deltaA)\n                {\n                    primaryEdge = 6;\n                    secondaryEdge = 0;\n                    tertiaryEdge = 3;\n                }\n                else\n                {\n                    primaryEdge = 0;\n                    secondaryEdge = 6;\n                    tertiaryEdge = 3;\n                }\n            }\n        }\n        else\n        {\n            edges.sort(sortByDeltaAscending);\n\n            primaryEdge = edges[0].other;\n\n            if (edges[0].vector.dot(edges[1].vector) === 0)\n            {\n                secondaryEdge = edges[2].other;\n                tertiaryEdge = edges[1].other;\n            }\n            else\n            {\n                secondaryEdge = edges[1].other;\n                tertiaryEdge = edges[2].other;\n            }\n\n        }\n\n        let nextFaceIsCoplanar = false;\n        if (i < last)\n        {\n            vNormalA.set(\n                normals[i    ],\n                normals[i + 1],\n                normals[i + 2]\n            );\n            vNormalB.set(\n                normals[i + 9],\n                normals[i + 10],\n                normals[i + 11]\n            );\n\n            nextFaceIsCoplanar = (vNormalA.dot(vNormalB) >= 0.9999);\n        }\n\n        //console.log({primaryEdge, secondaryEdge, tertiaryEdge});\n\n        baryArray[j     ] = primaryEdge === 0 ? 1 : 0;\n        baryArray[j +  1] = primaryEdge === 3 ? 1 : 0;\n        baryArray[j +  2] = primaryEdge === 6 ? 1 : 0;\n\n        baryArray[j +  4] = secondaryEdge === 0 ? 1 : 0;\n        baryArray[j +  5] = secondaryEdge === 3 ? 1 : 0;\n        baryArray[j +  6] = secondaryEdge === 6 ? 1 : 0;\n\n        baryArray[j +  8] = tertiaryEdge === 0 ? 1 : 0;\n        baryArray[j +  9] = tertiaryEdge === 3 ? 1 : 0;\n        baryArray[j + 10] = tertiaryEdge === 6 ? 1 : 0;\n\n        baryArray[j +  3] = prevFaceWasCoplanar ? 1 : 0;\n        baryArray[j +  7] = prevFaceWasCoplanar ? 1 : 0;\n        baryArray[j + 11] = prevFaceWasCoplanar ? 1 : 0;\n\n\n        if (prevFaceWasCoplanar)\n        {\n            rpArray[i    ] = rpArray[i - 9];\n            rpArray[i + 1] = rpArray[i - 8];\n            rpArray[i + 2] = rpArray[i - 7];\n\n            rpArray[i + 3] = rpArray[i - 6];\n            rpArray[i + 4] = rpArray[i - 5];\n            rpArray[i + 5] = rpArray[i - 4];\n\n            rpArray[i + 6] = rpArray[i - 3];\n            rpArray[i + 7] = rpArray[i - 2];\n            rpArray[i + 8] = rpArray[i - 1];\n        }\n        else\n        {\n            /// calculate distance reference points for each face\n            let center;\n            if (nextFaceIsCoplanar)\n            {\n                const centerA = getCenter(positions, i).clone();\n                const centerB = getCenter(positions, i + 9);\n\n                center = centerA.add(centerB).multiplyScalar(0.5);\n            }\n            else\n            {\n                center = getCenter(positions, i);\n            }\n\n            rpArray[i    ] = center.x;\n            rpArray[i + 1] = center.y;\n            rpArray[i + 2] = center.z;\n\n            rpArray[i + 3] = center.x;\n            rpArray[i + 4] = center.y;\n            rpArray[i + 5] = center.z;\n\n            rpArray[i + 6] = center.x;\n            rpArray[i + 7] = center.y;\n            rpArray[i + 8] = center.z;\n        }\n\n        prevFaceWasCoplanar = nextFaceIsCoplanar;\n    }\n    //console.log(\"BARYCENTRIC\", barycentric);\n\n    geometry.addAttribute(\"barycentric\", barycentric);\n    geometry.addAttribute(\"refPoint\", refPoint);\n\n}\n","const TAU = Math.PI * 2;\n\nfunction sortAscending(a,b)\n{\n    return a - b;\n}\n\nexport default function (geometry) {\n    const positions = geometry.attributes.position.array;\n\n    if (geometry.getIndex() != null)\n    {\n        throw new Error(\"Only works on non-indexed geometry\");\n    }\n\n    const length = positions.length;\n\n    const numFaces = length/9;\n    const areas = new Array(numFaces);\n\n    for (let i = 0, j = 0; i < length; i += 9, j ++)\n    {\n        const x1 = positions[i + 3] -positions[i    ];\n        const x2 = positions[i + 4] -positions[i + 1];\n        const x3 = positions[i + 5] -positions[i + 2];\n        const y1 = positions[i + 6] -positions[i    ];\n        const y2 = positions[i + 7] -positions[i + 1];\n        const y3 = positions[i + 8] -positions[i + 2];\n\n        const t0 = (x2 * y3 - x3 * y2);\n        const t1 = (x3 * y1 - x1 * y3);\n        const t2 = (x1 * y2 - x2 * y1);\n        areas[j] = Math.sqrt( t0*t0 + t1*t1 + t2*t2) / 2;\n    }\n\n    // S=12(x2⋅y3−x3⋅y2)2+(x3⋅y1−x1⋅y3)2+(x1⋅y2−x2⋅y1)2−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−√\n\n    areas.sort(sortAscending);\n\n    const half = (numFaces/2)|0;\n    \n    // even number of values?\n    if ((numFaces & 1) === 0)\n    {\n        return (areas[half - 1] + areas[half])/2;\n    }\n    else\n    {\n        return areas[half];\n    }\n}\n","import {\n    BufferAttribute,\n    Plane,\n    Vector3\n} from \"three\";\n\n\nconst TAU = Math.PI * 2;\n\nconst vCenter = new Vector3(0,0,0);\n\nfunction getCenter(positions, index)\n{\n    vCenter.x = (\n            positions[index] +\n            positions[index + 3] +\n            positions[index + 6]\n        ) / 3;\n\n    vCenter.y = (\n            positions[index + 1] +\n            positions[index + 4] +\n            positions[index + 7]\n        ) / 3;\n\n    vCenter.z = (\n            positions[index + 2] +\n            positions[index + 5] +\n            positions[index + 8]\n        ) / 3;\n\n\n    return vCenter;\n}\n\nexport default function (geometry, alternatingQuads = true) {\n    const positions = geometry.attributes.position.array;\n\n    // Build new attribute storing refPoint coordinates\n    // for each vertex\n    const refPoint = new BufferAttribute(new Float32Array(positions.length), 3);\n\n    const rpArray = refPoint.array;\n\n    for (let i = 0; i < positions.length; i += 9)\n    {\n    }\n    //console.log(\"BARYCENTRIC\", refPoint);\n\n    return refPoint;\n}\n"],"sourceRoot":""}